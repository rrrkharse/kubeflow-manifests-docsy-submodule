<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubeflow on AWS â€“ Install Kubeflow</title>
    <link>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/</link>
    <description>Recent content in Install Kubeflow on Kubeflow on AWS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Prerequisites</title>
      <link>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/prerequisites/</guid>
      <description>
        
        
        &lt;h2 id=&#34;install-the-necessary-tools&#34;&gt;Install the necessary tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html&#34;&gt;AWS CLI&lt;/a&gt; - A command line tool for interacting with AWS services.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eksctl.io/introduction/#installation&#34;&gt;eksctl&lt;/a&gt; - A command line tool for working with EKS clusters.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools&#34;&gt;kubectl&lt;/a&gt; - A command line tool for working with Kubernetes clusters.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq&#34;&gt;yq&lt;/a&gt; - A command line tool for YAML processing. (For Linux environments, use the &lt;a href=&#34;https://github.com/mikefarah/yq/#install&#34;&gt;wget plain binary installation&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stedolan.github.io/jq/download/&#34;&gt;jq&lt;/a&gt; - A command line tool for processing JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/kustomize/releases/tag/v3.2.0&#34;&gt;kustomize version 3.2.0&lt;/a&gt; - A command line tool to customize Kubernetes objects through a kustomization file.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Warning: Kubeflow is not compatible with the latest versions of of kustomize 4.x. This is due to changes in the order that resources are sorted and printed. Please see &lt;a href=&#34;https://github.com/kubernetes-sigs/kustomize/issues/3794&#34;&gt;kubernetes-sigs/kustomize#3794&lt;/a&gt; and &lt;a href=&#34;https://github.com/kubeflow/manifests/issues/1797&#34;&gt;kubeflow/manifests#1797&lt;/a&gt;. We know that this is not ideal and are working with the upstream kustomize team to add support for the latest versions of kustomize as soon as we can.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;python&lt;/a&gt; - A programming language used for automated installation scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pip.pypa.io/en/stable/installation/&#34;&gt;pip&lt;/a&gt; - A package installer for python.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;create-an-eks-cluster&#34;&gt;Create an EKS cluster&lt;/h2&gt;
&lt;p&gt;If you do not have an existing cluster, run the following command to create an EKS cluster.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: Various controllers use IAM roles for service accounts (IRSA). An &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html&#34;&gt;OIDC provider&lt;/a&gt; must exist for your cluster to use IRSA.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Change the values for the &lt;code&gt;CLUSTER_NAME&lt;/code&gt; and &lt;code&gt;CLUSTER_REGION&lt;/code&gt; environment variables:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CLUSTER_NAME&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$CLUSTER_NAME&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CLUSTER_REGION&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$CLUSTER_REGION&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run the following command to create an EKS cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;eksctl create cluster &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--name &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CLUSTER_NAME&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--version 1.20 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--region &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CLUSTER_REGION&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--nodegroup-name linux-nodes &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--node-type m5.xlarge &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--nodes &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--nodes-min &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--nodes-max &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--managed &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--with-oidc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are using an existing EKS cluster, create an &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html&#34;&gt;OIDC provider&lt;/a&gt; and associate it with for your EKS cluster with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;eksctl utils associate-iam-oidc-provider --cluster &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CLUSTER_NAME&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;--region &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CLUSTER_REGION&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; --approve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;More details about cluster creation via &lt;code&gt;eksctl&lt;/code&gt; can be found in the &lt;a href=&#34;https://eksctl.io/usage/creating-and-managing-clusters/&#34;&gt;Creating and managing clusters&lt;/a&gt; guide.&lt;/p&gt;
&lt;h2 id=&#34;clone-the-repository&#34;&gt;Clone the repository&lt;/h2&gt;
&lt;p&gt;Clone the &lt;a href=&#34;https://github.com/awslabs/kubeflow-manifests&#34;&gt;&lt;code&gt;awslabs/kubeflow-manifest&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kubeflow/manifests&#34;&gt;&lt;code&gt;kubeflow/manifests&lt;/code&gt;&lt;/a&gt; repositories and check out the release branches of your choosing.&lt;/p&gt;
&lt;p&gt;Substitute the value for &lt;code&gt;KUBEFLOW_RELEASE_VERSION&lt;/code&gt;(e.g. v1.4.1) and &lt;code&gt;AWS_RELEASE_VERSION&lt;/code&gt;(e.g. v1.4.1-aws-b1.0.0) with the tag or branch you want to use below. Read more about &lt;a href=&#34;https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/about/releases/&#34;&gt;releases and versioning&lt;/a&gt; if you are unsure about what these values should be.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KUBEFLOW_RELEASE_VERSION&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&amp;lt;&amp;gt;
&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AWS_RELEASE_VERSION&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&amp;lt;&amp;gt;
git clone https://github.com/awslabs/kubeflow-manifests.git &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; kubeflow-manifests
git checkout &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AWS_RELEASE_VERSION&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;
git clone --branch &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;KUBEFLOW_RELEASE_VERSION&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; https://github.com/kubeflow/manifests.git upstream
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Cognito</title>
      <link>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/cognito/guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/cognito/guide/</guid>
      <description>
        
        
        &lt;p&gt;This guide describes how to deploy Kubeflow on AWS EKS using Cognito as identity provider. Kubeflow uses Istio to manage internal traffic. In this guide we will be creating an Ingress to manage external traffic to the Kubernetes services and an Application Load Balancer(ALB) to provide public DNS and enable TLS authentication at the load balancer. We will also be creating a custom domain to host Kubeflow since certificates(needed for TLS) for ALB&amp;rsquo;s public DNS names are not supported.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Follow the pre-requisites section from &lt;a href=&#34;../prerequisites.md&#34;&gt;this guide&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href=&#34;../add-ons/load-balancer/README.md#background&#34;&gt;background section&lt;/a&gt; in the load balancer guide for information on the requirements for exposing Kubeflow over a load balancer.&lt;/p&gt;
&lt;p&gt;Read the &lt;a href=&#34;../add-ons/load-balancer/README.md#create-domain-and-certificates&#34;&gt;create domain and cerificate section&lt;/a&gt; for information on why we use subdomain for hosting Kubeflow.&lt;/p&gt;
&lt;h2 id=&#34;optional-automated-setup&#34;&gt;(Optional) Automated setup&lt;/h2&gt;
&lt;p&gt;The rest of the sections in this guide walks you through each step for setting up domain, certificates and Cognito userpool using AWS Console and is good for a new user to understand the design and details. If you prefer to use automated scripts and avoid human error for setting up the resources for deploying Kubeflow with Cognito, follow this &lt;a href=&#34;./README-automated.md&#34;&gt;README&lt;/a&gt; instead.&lt;/p&gt;
&lt;h2 id=&#34;10-custom-domain-and-certificates&#34;&gt;1.0 Custom domain and certificates&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Follow the &lt;a href=&#34;../add-ons/load-balancer/README.md#create-a-subdomain&#34;&gt;Create a subdomain&lt;/a&gt; section of the load balancer guide to create a subdomain(e.g. &lt;code&gt;platform.example.com&lt;/code&gt;) for hosting Kubeflow.&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href=&#34;../add-ons/load-balancer/README.md#create-certificates-for-domain&#34;&gt;Create certificates for domain&lt;/a&gt; section of the load balancer guide to create certificates required for TLS.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From this point onwards, we will be creating/updating the DNS records &lt;strong&gt;only in the subdomain&lt;/strong&gt;. All the screenshots of hosted zone in the following sections/steps of this guide are for the subdomain.&lt;/p&gt;
&lt;h2 id=&#34;20-cognito-user-pool&#34;&gt;2.0 Cognito User Pool&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create a user pool in Cognito in the same region as your EKS cluster. Type a pool name and choose &lt;code&gt;Review defaults&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Email is a required user attribute since Kubeflow uses email address as the user identifier for multi-user isolation. See this &lt;a href=&#34;https://www.kubeflow.org/docs/components/multi-tenancy/getting-started/#manual-profile-creation&#34;&gt;documentation&lt;/a&gt; for example. On the review page, make sure email is selected as a required attribute. If it is not by default, Edit the &lt;code&gt;Required attributes&lt;/code&gt; and select &lt;code&gt;email&lt;/code&gt;.
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/cognito-email-required.png&#34; alt=&#34;cognito-email-required&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;On the Policies page, select &lt;code&gt;Only allow administrators to create users&lt;/code&gt; under &lt;code&gt;Do you want to allow users to sign themselves up?&lt;/code&gt; and save changes. This step is optional but is recommended to have strict control over the users.&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Create pool&lt;/code&gt; to create the user pool.&lt;/li&gt;
&lt;li&gt;Add an &lt;code&gt;App client&lt;/code&gt; with any name and the default options.
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/cognito-app-client-id.png&#34; alt=&#34;cognito-app-client-id&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;In the &lt;code&gt;App client settings&lt;/code&gt;, select &lt;code&gt;Authorization code grant&lt;/code&gt; flow under OAuth-2.0 and check box &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;openid&lt;/code&gt;, &lt;code&gt;aws.cognito.signin.user.admin&lt;/code&gt; and &lt;code&gt;profile&lt;/code&gt; scopes. Also check box &lt;code&gt;Enabled Identity Providers&lt;/code&gt;.
&lt;ol&gt;
&lt;li&gt;Substitute &lt;code&gt;example.com&lt;/code&gt; in this URL - &lt;code&gt;https://kubeflow.platform.example.com/oauth2/idpresponse&lt;/code&gt; with your domain and use it as the Callback URL(s).&lt;/li&gt;
&lt;li&gt;Substitute &lt;code&gt;example.com&lt;/code&gt; in this URL - &lt;code&gt;https://kubeflow.platform.example.com&lt;/code&gt; with your domain and use it as the Sign out URL(s).&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;./images/cognito-app-client-settings.png&#34; alt=&#34;cognito-app-client-settings&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Add a custom domain to the user pool. In order to add a custom domain to your user pool, you need specify a domain name, and provide a certificate managed with AWS Certificate Manager (ACM).
&lt;ol&gt;
&lt;li&gt;In order to use a custom domain, its root(i.e. &lt;code&gt;platform.example.com&lt;/code&gt;) must have an valid A type record. Create a new record of type &lt;code&gt;A&lt;/code&gt; in &lt;code&gt;platform.example.com&lt;/code&gt; hosted zone with an arbitrary IP for now. Once we have ALB created, we will update this value.
&lt;ol&gt;
&lt;li&gt;Following is a screenshot of &lt;code&gt;platform.example.com&lt;/code&gt; hosted zone. A record is shown.
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/subdomain-initial-A-record.png&#34; alt=&#34;subdomain-initial-A-record&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;If your cluster is not in N.Virginia(us-east-1), create an ACM certificate in us-east-1 for &lt;code&gt;*.platform.example.com&lt;/code&gt; by following the process similar to &lt;a href=&#34;../add-ons/load-balancer/README.md#create-certificates-for-domain&#34;&gt;section 2.0&lt;/a&gt;. That is because &lt;a href=&#34;https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html&#34;&gt;Cognito requires&lt;/a&gt; a certificate in N.Virginia in order to have a custom domain for a user pool.&lt;/li&gt;
&lt;li&gt;In the &lt;code&gt;Domain name&lt;/code&gt; choose &lt;code&gt;Use your domain&lt;/code&gt;, type &lt;code&gt;auth.platform.example.com&lt;/code&gt; and select the &lt;code&gt;*.platform.example.com&lt;/code&gt; AWS managed certificate youâ€™ve created in N.Virginia. Creating domain takes up to 15 mins.
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/cognito-active-domain.png&#34; alt=&#34;cognito-active-domain&#34;&gt;&lt;/li&gt;
&lt;li&gt;When itâ€™s created, it will return the &lt;code&gt;Alias target&lt;/code&gt; CloudFront address.
&lt;ol&gt;
&lt;li&gt;Screenshot of the CloudFront URL for Cognito Domain name:
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/cognito-domain-cloudfront-url.png&#34; alt=&#34;cognito-domain-cloudfront-url&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Create a new record of type &lt;code&gt;A&lt;/code&gt; for &lt;code&gt;auth.platform.example.com&lt;/code&gt; with the value of the CloudFront URL.
&lt;ol&gt;
&lt;li&gt;Select the &lt;code&gt;alias&lt;/code&gt; toggle and select Alias to Cloudfront distribution for creating the record&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;./images/cognito-domain-cloudfront-A-record-creatin.png&#34; alt=&#34;cognito-domain-cloudfront-A-record-creating&#34;&gt;&lt;/li&gt;
&lt;li&gt;Following is a screenshot of the A record for &lt;code&gt;auth.platform.example.com&lt;/code&gt; in &lt;code&gt;platform.example.com&lt;/code&gt; hosted zone:
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/cognito-domain-cloudfront-A-record-created.png&#34; alt=&#34;cognito-domain-cloudfront-A-record-created&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;30-configure-ingress&#34;&gt;3.0 Configure Ingress&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Take note of the following values from the previous step or &lt;code&gt;awsconfigs/infra_configs/scripts/config.yaml&lt;/code&gt; if you used automated guide(./README-automated.md):
&lt;ol&gt;
&lt;li&gt;The Pool ARN of the user pool found in Cognito general settings.&lt;/li&gt;
&lt;li&gt;The App client id, found in Cognito App clients.&lt;/li&gt;
&lt;li&gt;The custom user pool domain (e.g. &lt;code&gt;auth.platform.example.com&lt;/code&gt;), found in the Cognito domain name.&lt;/li&gt;
&lt;li&gt;The ARN of the certificate from the Certificate Manager in the region where your platform (for the subdomain) in the region where your platform is running.&lt;/li&gt;
&lt;li&gt;signOutURL is the domain which you provided as the Sign out URL(s).&lt;/li&gt;
&lt;li&gt;CognitoLogoutURL is comprised of your CognitoUserPoolDomain, CognitoAppClientId, and your domain which you provided as the Sign out URL(s).&lt;/li&gt;
&lt;li&gt;Export the values:
1.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;export CognitoUserPoolArn=&amp;lt;&amp;gt;
export CognitoAppClientId=&amp;lt;&amp;gt;
export CognitoUserPoolDomain=&amp;lt;&amp;gt;
export certArn=&amp;lt;&amp;gt;
export signOutURL=&amp;lt;&amp;gt;
export CognitoLogoutURL=https://$CognitoUserPoolDomain/logout?client_id=$CognitoAppClientId&amp;amp;logout_uri=$signOutURL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Substitute values for setting up Ingress.
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; printf &amp;#39;
 CognitoUserPoolArn=&amp;#39;$CognitoUserPoolArn&amp;#39;
 CognitoAppClientId=&amp;#39;$CognitoAppClientId&amp;#39;
 CognitoUserPoolDomain=&amp;#39;$CognitoUserPoolDomain&amp;#39;
 certArn=&amp;#39;$certArn&amp;#39;
 &amp;#39; &amp;gt; awsconfigs/common/istio-ingress/overlays/cognito/params.env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Substitute values for setting up AWS authservice.
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; printf &amp;#39;
 LOGOUT_URL=&amp;#39;$CognitoLogoutURL&amp;#39;
 &amp;#39; &amp;gt; awsconfigs/common/aws-authservice/base/params.env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href=&#34;../add-ons/load-balancer/README.md#configure-load-balancer-controller&#34;&gt;Configure Load Balancer Controller&lt;/a&gt; section of the load balancer guide to setup the resources required the load balancer controller.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;40-building-manifests-and-deploying-kubeflow&#34;&gt;4.0 Building manifests and deploying Kubeflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Deploy Kubeflow. Choose one of the two options to deploy kubeflow:
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;[Option 1]&lt;/strong&gt; Install with a single command
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;while ! kustomize build docs/deployment/cognito | kubectl apply -f -; do echo &amp;#34;Retrying to apply resources&amp;#34;; sleep 10; done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[Option 2]&lt;/strong&gt; Install individual components
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;# Kubeflow namespace
kustomize build common/kubeflow-namespace/base | kubectl apply -f -
       
# Kubeflow Roles
kustomize build common/kubeflow-roles/base | kubectl apply -f -
       
# Istio
kustomize build common/istio-1-9/istio-crds/base | kubectl apply -f -
kustomize build common/istio-1-9/istio-namespace/base | kubectl apply -f -
kustomize build common/istio-1-9/istio-install/base | kubectl apply -f -
       
# Cert-Manager
kustomize build common/cert-manager/cert-manager/base | kubectl apply -f -
kustomize build common/cert-manager/kubeflow-issuer/base | kubectl apply -f -
       
# KNative
kustomize build common/knative/knative-serving/overlays/gateways | kubectl apply -f -
kustomize build common/knative/knative-eventing/base | kubectl apply -f -
kustomize build common/istio-1-9/cluster-local-gateway/base | kubectl apply -f -
       
# Kubeflow Istio Resources
kustomize build common/istio-1-9/kubeflow-istio-resources/base | kubectl apply -f -
       
# Kubeflow Pipelines
# reapply manifest if you see an error
kustomize build apps/pipeline/upstream/env/platform-agnostic-multi-user | kubectl apply -f -
       
# KFServing
kustomize build apps/kfserving/upstream/overlays/kubeflow | kubectl apply -f -
       
# Katib
kustomize build apps/katib/upstream/installs/katib-with-kubeflow | kubectl apply -f -
       
# Central Dashboard
kustomize build upstream/apps/centraldashboard/upstream/overlays/istio | kubectl apply -f -
       
# Notebooks
kustomize build upstream/apps/jupyter/notebook-controller/upstream/overlays/kubeflow | kubectl apply -f -
kustomize build awsconfigs/apps/jupyter-web-app | kubectl apply -f -
       
# Admission Webhook
kustomize build upstream/apps/admission-webhook/upstream/overlays/cert-manager | kubectl apply -f -
       
# Profiles + KFAM
kustomize build upstream/apps/profiles/upstream/overlays/kubeflow | kubectl apply -f -
       
# Volumes Web App
kustomize build upstream/apps/volumes-web-app/upstream/overlays/istio | kubectl apply -f -
       
# Tensorboard
kustomize build upstream/apps/tensorboard/tensorboards-web-app/upstream/overlays/istio | kubectl apply -f -
kustomize build upstream/apps/tensorboard/tensorboard-controller/upstream/overlays/kubeflow | kubectl apply -f -
       
# MPI Operator
kustomize build upstream/apps/mpi-job/upstream/overlays/kubeflow | kubectl apply -f -

# Training Operator
kustomize build upstream/apps/training-operator/upstream/overlays/kubeflow | kubectl apply -f -

# AWS Telemetry - This is an optional component. See usage tracking documentation for more information
kustomize build awsconfigs/common/aws-telemetry | kubectl apply -f -

# Ingress
kustomize build awsconfigs/common/istio-ingress/overlays/cognito | kubectl apply -f -

# ALB controller
kustomize build awsconfigs/common/aws-alb-ingress-controller/base | kubectl apply -f -

# AWS Authservice
kustomize build awsconfigs/common/aws-authservice/base | kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;50-updating-the-domain-with-alb-address&#34;&gt;5.0 Updating the domain with ALB address&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Check if ALB is provisioned. It takes around 3-5 minutes
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; kubectl get ingress -n istio-system
 Warning: extensions/v1beta1 Ingress is deprecated in v1.14+, unavailable in v1.22+; use networking.k8s.io/v1 Ingress
 NAME            CLASS    HOSTS   ADDRESS                                                                  PORTS   AGE
 istio-ingress   &amp;lt;none&amp;gt;   *       ebde55ee-istiosystem-istio-2af2-1100502020.us-west-2.elb.amazonaws.com   80      15d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;ADDRESS&lt;/code&gt; is empty after a few minutes, check the logs of alb-ingress-controller by following &lt;a href=&#34;https://www.kubeflow.org/docs/distributions/aws/troubleshooting-aws/#alb-fails-to-provision&#34;&gt;this guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;When ALB is ready, copy the DNS name of that load balancer and create a CNAME entry to it in Route53 under subdomain (&lt;code&gt;platform.example.com&lt;/code&gt;) for &lt;code&gt;*.platform.example.com&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/subdomain-*.platform-and-*.default-records.png&#34; alt=&#34;subdomain-.platform-and-.default-records&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Update the type &lt;code&gt;A&lt;/code&gt; record created in section for &lt;code&gt;platform.example.com&lt;/code&gt; using ALB DNS name. Change from &lt;code&gt;127.0.0.1&lt;/code&gt; â†’ ALB DNS name. You have to use alias form under &lt;code&gt;Alias to application and classical load balancer&lt;/code&gt; and select region and your ALB address.
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/subdomain-A-record-updated.png&#34; alt=&#34;subdomain-A-record-updated&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Screenshot of all the record sets in hosted zone for reference
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/subdomain-records-summary.png&#34; alt=&#34;subdomain-records-summary&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;60-connecting-to-central-dashboard&#34;&gt;6.0 Connecting to Central dashboard&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The central dashboard should now be available at &lt;a href=&#34;https://kubeflow.platform.example.com/&#34;&gt;https://kubeflow.platform.example.com&lt;/a&gt;. Before connecting to the dashboard:
&lt;ol&gt;
&lt;li&gt;Head over to the Cognito console and create some users in &lt;code&gt;Users and groups&lt;/code&gt;. These are the users who will login to the central dashboard.
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;./images/cognito-user-pool-created.png&#34; alt=&#34;cognito-user-pool-created&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Create a profile for a user created in previous step by &lt;a href=&#34;https://www.kubeflow.org/docs/components/multi-tenancy/getting-started/#manual-profile-creation&#34;&gt;following this guide&lt;/a&gt;. Following is a sample profile for reference:
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; apiVersion: kubeflow.org/v1beta1
 kind: Profile
 metadata:
     # replace with the name of profile you want, this will be user&amp;#39;s namespace name
     name: namespace-for-my-user
     namespace: kubeflow
 spec:
     owner:
         kind: User
         # replace with the email of the user
         name: my_user_email@kubeflow.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Open the central dashboard at &lt;a href=&#34;https://kubeflow.platform.example.com/&#34;&gt;https://kubeflow.platform.example.com&lt;/a&gt;. It will redirect to Cognito for login. Use the credentials of the user for which profile was created in previous step.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: RDS and S3</title>
      <link>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/rds-s3/guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/rds-s3/guide/</guid>
      <description>
        
        
        &lt;p&gt;This Kustomize Manifest can be used to deploy Kubeflow Pipelines (KFP) and Katib with RDS and S3.&lt;/p&gt;
&lt;h3 id=&#34;rds&#34;&gt;RDS&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html&#34;&gt;Amazon Relational Database Service (RDS)&lt;/a&gt; is a managed relational database service that facilitates several database management tasks such as database scaling, database backups, database software patching, OS patching, and more.&lt;/p&gt;
&lt;p&gt;In the &lt;a href=&#34;../../../docs/deployment/vanilla/kustomization.yaml&#34;&gt;default kubeflow installation&lt;/a&gt;, the &lt;a href=&#34;https://github.com/kubeflow/manifests/blob/v1.4-branch/apps/katib/upstream/components/mysql/mysql.yaml&#34;&gt;KFP&lt;/a&gt; and &lt;a href=&#34;https://github.com/kubeflow/manifests/blob/v1.4-branch/apps/pipeline/upstream/third-party/mysql/base/mysql-deployment.yaml&#34;&gt;Katib&lt;/a&gt; components both use their own MySQL pod to persist KFP data (such as experiments, pipelines, jobs, etc.) and Katib experiment observation logs, respectively.&lt;/p&gt;
&lt;p&gt;As compared to using the MySQL setup in the default installation, using RDS provides the following advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easier to configure availability: RDS provides high availability and failover support for DB instances using Multi Availability Zone (Mulit-AZ) deployments with a single standby DB instance, increasing the availability of KFP and Katib services during unexpected network events&lt;/li&gt;
&lt;li&gt;Easy to configure scalability: While the default Kubeflow installation uses a EBS hosted Peristent Volume Claim that is AZ bound and does not support automatic online resizing, RDS can be configured to handle availability and scaling needs&lt;/li&gt;
&lt;li&gt;KFP and Katib data can be persisted beyond single Kubeflow installations: Using RDS decouples the KFP and Katib datastores from the Kubeflow deployment, allowing multiple Kubeflow installations to reuse the same RDS instance provided that the KFP component versions stores data in a format that is compatible with each other.&lt;/li&gt;
&lt;li&gt;Higher level of customizability and management: RDS provides management features to facilitate changing database instance types, updating SQL versions, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;s3&#34;&gt;S3&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html&#34;&gt;Amazon Simple Storage Service (S3)&lt;/a&gt; is an object storage service that is highly scalable, available, secure, and performant.&lt;/p&gt;
&lt;p&gt;In the &lt;a href=&#34;../../../docs/deployment/vanilla/kustomization.yaml&#34;&gt;default kubeflow installation&lt;/a&gt;, the &lt;a href=&#34;https://github.com/kubeflow/manifests/blob/v1.4-branch/apps/pipeline/upstream/third-party/minio/base/minio-deployment.yaml&#34;&gt;KFP&lt;/a&gt; component uses the MinIO object storage service that can be configured to store objects in S3. However, by default the installation hosts the object store service locally in the cluster. KFP stores data such as pipeline architectures and pipeline run artifacts in MinIO.&lt;/p&gt;
&lt;p&gt;Configuring MinIO to read and write to S3 provides the following advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Higher scalability and availability: S3 offers industry-leading scalability and availability and is more durable than the default MinIO object storage solution provided by Kubeflow.&lt;/li&gt;
&lt;li&gt;KFP artifacts can be persisted beyond single Kubeflow installations: Using S3 decouples the KFP artifact store from the Kubeflow deployment, allowing multiple Kubeflow installations to access the same artifacts provided that the KFP component versions stores data in a format that is compatible with each other.&lt;/li&gt;
&lt;li&gt;Higher level of customizability and management: S3 provides management features to help optimize, organize, and configure access to your data to meet your specific business, organizational, and compliance requirements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get started with configuring and installing your Kubeflow installation with RDS and S3 follow the &lt;a href=&#34;#install&#34;&gt;install&lt;/a&gt; steps below to configure and deploy the Kustomize manifest.&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;p&gt;The following steps show how to configure and deploy Kubeflow with supported AWS services.&lt;/p&gt;
&lt;h3 id=&#34;using-only-rds-or-only-s3&#34;&gt;Using only RDS or only S3&lt;/h3&gt;
&lt;p&gt;Steps relevant only to the RDS installation will be prefixed with &lt;code&gt;[RDS]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Steps relevant only to the S3 installation will be prefixed with &lt;code&gt;[S3]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Steps without any prefixing are necessary for all installations.&lt;/p&gt;
&lt;p&gt;To install for either only RDS or S3 complete the steps relevant to your installation choice.&lt;/p&gt;
&lt;p&gt;To install for both RDS and S3 complete all the below steps.&lt;/p&gt;
&lt;h2 id=&#34;10-prerequisites&#34;&gt;1.0 Prerequisites&lt;/h2&gt;
&lt;p&gt;Follow the pre-requisites section from &lt;a href=&#34;../prerequisites.md&#34;&gt;this guide&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verify that your are in the root of this repository by running the pwd command. The path should be &amp;lt;PATH/kubeflow-manifests&amp;gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;pwd 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Create an OIDC provider for your cluster&lt;br&gt;
&lt;strong&gt;Important :&lt;/strong&gt;&lt;br&gt;
You must make sure you have an &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html&#34;&gt;OIDC provider&lt;/a&gt; for your cluster and that it was added from &lt;code&gt;eksctl&lt;/code&gt; &amp;gt;= &lt;code&gt;0.56&lt;/code&gt; or if you already have an OIDC provider in place, then you must make sure you have the tag &lt;code&gt;alpha.eksctl.io/cluster-name&lt;/code&gt; with the cluster name as its value. If you don&amp;rsquo;t have the tag, you can add it via the AWS Console by navigating to IAM-&amp;gt;Identity providers-&amp;gt;Your OIDC-&amp;gt;Tags.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;20-setup-rds-s3-and-configure-secrets&#34;&gt;2.0 Setup RDS, S3 and configure Secrets&lt;/h2&gt;
&lt;p&gt;There are two ways to create the RDS and S3 resources before you deploy the Kubeflow manifests. Either use the automated python script we have provided by following the steps in section 2.1 or fall back on the manual setup steps as in section 2.2 below -&lt;/p&gt;
&lt;h3 id=&#34;21-option-1-automated-setup&#34;&gt;2.1 &lt;strong&gt;Option 1: Automated Setup&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;This setup performs all the manual steps in an automated fashion.&lt;br&gt;
The script takes care of creating the S3 bucket, creating the S3 secrets using the secrets manager, setting up the RDS database and creating the RDS secret using the secrets manager. It also edits the required configuration files for Kubeflow pipeline to be properly configured for the RDS database during Kubeflow installation.&lt;br&gt;
The script also handles cases where the resources already exist in which case it will simply skips the step.&lt;/p&gt;
&lt;p&gt;Note : The script will &lt;strong&gt;not&lt;/strong&gt; delete any resource therefore if a resource already exists (eg: secret, database with the same name or S3 bucket etc), &lt;strong&gt;it will skip the creation of those resources and use the existing resources instead&lt;/strong&gt;. This was done in order to prevent unwanted results such as accidental deletion. For instance, if a database with the same name already exists, the script will skip the database creation setup. If it&amp;rsquo;s expected in your scenario, then perhaps this is fine for you, if you simply forgot to change the database name used for creation then this gives you the chance to retry the script with the proper value. See &lt;code&gt;python auto-rds-s3-setup.py --help&lt;/code&gt; for the list of parameters as well as their default values.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Navigate to the Navigate to &lt;code&gt;tests/e2e&lt;/code&gt; directory&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd tests/e2e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Install the script dependencies &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_cliwpsapi&#34;&gt;Create an IAM user&lt;/a&gt; with permissions to get bucket location and allow read and write access to objects in an S3 bucket where you want to store the Kubeflow artifacts. Use the &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; of the IAM user below:&lt;/li&gt;
&lt;li&gt;Export values for &lt;code&gt;CLUSTER_REGION&lt;/code&gt;, &lt;code&gt;CLUSTER_NAME&lt;/code&gt;, &lt;code&gt;S3_BUCKET&lt;/code&gt;, &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt;, and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; then run the script&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;export CLUSTER_REGION=
export CLUSTER_NAME=
export S3_BUCKET=
export AWS_ACCESS_KEY_ID=
export AWS_SECRET_ACCESS_KEY=

PYTHONPATH=.. python utils/rds-s3/auto-rds-s3-setup.py --region $CLUSTER_REGION --cluster $CLUSTER_NAME --bucket $S3_BUCKET --s3_aws_access_key_id $AWS_ACCESS_KEY_ID --s3_aws_secret_access_key $AWS_SECRET_ACCESS_KEY
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;advanced-customization&#34;&gt;Advanced customization&lt;/h3&gt;
&lt;p&gt;The script applies some sensible default values for the db user password, max storage, storage type, instance type etc but if you know what you are doing, you can always tweak those preferences by passing different values.&lt;br&gt;
You can learn more about the different parameters by running &lt;code&gt;PYTHONPATH=.. python utils/rds-s3/auto-rds-s3-setup.py --help&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;22-option-2-manual-setup&#34;&gt;2.2 &lt;strong&gt;Option 2: Manual Setup&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;If you prefer to manually setup each components then you can follow this manual guide.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[S3] Create an S3 Bucket&lt;/p&gt;
&lt;p&gt;Refer to the &lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/userguide/GetStartedWithS3.html&#34;&gt;S3 documentation&lt;/a&gt; for steps on creating an &lt;code&gt;S3 bucket&lt;/code&gt;.
To complete the following steps you will need to keep track of the &lt;code&gt;S3 bucket name&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[RDS] Create an RDS Instance&lt;/p&gt;
&lt;p&gt;Refer to the &lt;a href=&#34;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.MySQL.html&#34;&gt;RDS documentation&lt;/a&gt; for steps on creating an &lt;code&gt;RDS MySQL instance&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When creating the RDS instance for security and connectivity reasons we recommend that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The RDS instance is in the same VPC as the cluster&lt;/li&gt;
&lt;li&gt;The RDS instance subnets must belong to at least 2 private subnets within the VPC&lt;/li&gt;
&lt;li&gt;The RDS instance security group is the same security group used by the EKS node instances&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To complete the following steps you will need to keep track of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RDS database name&lt;/code&gt; (not to be confused with the &lt;code&gt;DB identifier&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RDS database admin username&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RDS database admin password&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RDS database endpoint URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RDS database port&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create Secrets in AWS Secrets Manager&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[RDS] Create the RDS secret and configure the secret provider:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configure a secret, for example named &lt;code&gt;rds-secret&lt;/code&gt;, with the RDS DB name, RDS endpoint URL, RDS DB port, and RDS DB credentials that were configured when following the steps in Create RDS Instance.
&lt;ul&gt;
&lt;li&gt;For example, if your database name is &lt;code&gt;kubeflow&lt;/code&gt;, your endpoint URL is &lt;code&gt;rm12abc4krxxxxx.xxxxxxxxxxxx.us-west-2.rds.amazonaws.com&lt;/code&gt;, your DB port is &lt;code&gt;3306&lt;/code&gt;, your DB username is &lt;code&gt;admin&lt;/code&gt;, and your DB password is &lt;code&gt;Kubefl0w&lt;/code&gt; your secret should look like:&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;export RDS_SECRET=&amp;lt;your rds secret name&amp;gt;
aws secretsmanager create-secret --name $RDS_SECRET --secret-string &amp;#39;{&amp;#34;username&amp;#34;:&amp;#34;admin&amp;#34;,&amp;#34;password&amp;#34;:&amp;#34;Kubefl0w&amp;#34;,&amp;#34;database&amp;#34;:&amp;#34;kubeflow&amp;#34;,&amp;#34;host&amp;#34;:&amp;#34;rm12abc4krxxxxx.xxxxxxxxxxxx.us-west-2.rds.amazonaws.com&amp;#34;,&amp;#34;port&amp;#34;:&amp;#34;3306&amp;#34;}&amp;#39; --region $CLUSTER_REGION
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Rename the &lt;code&gt;parameters.objects.objectName&lt;/code&gt; field in &lt;a href=&#34;../../../awsconfigs/common/aws-secrets-manager/rds/secret-provider.yaml&#34;&gt;the rds secret provider configuration&lt;/a&gt; to the name of the secret.
&lt;ul&gt;
&lt;li&gt;One line command:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;yq e -i &amp;#39;.spec.parameters.objects |= sub(&amp;#34;rds-secret&amp;#34;,env(RDS_SECRET))&amp;#39; awsconfigs/common/aws-secrets-manager/rds/secret-provider.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;For example, if your secret name is &lt;code&gt;rds-secret-new&lt;/code&gt;, the configuration would look like:&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
   name: rds-secret

   ...
              
   parameters:
      objects: | 
      - objectName: &amp;#34;rds-secret-new&amp;#34; # This line was changed
        objectType: &amp;#34;secretsmanager&amp;#34;
        jmesPath:
           - path: &amp;#34;username&amp;#34;
              objectAlias: &amp;#34;user&amp;#34;
           - path: &amp;#34;password&amp;#34;
              objectAlias: &amp;#34;pass&amp;#34;
           - path: &amp;#34;host&amp;#34;
              objectAlias: &amp;#34;host&amp;#34;
           - path: &amp;#34;database&amp;#34;
              objectAlias: &amp;#34;database&amp;#34;
           - path: &amp;#34;port&amp;#34;
              objectAlias: &amp;#34;port&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[S3] Create the S3 secret and configure the secret provider:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configure a secret, for example named &lt;code&gt;s3-secret&lt;/code&gt;, with your AWS credentials. These need to be long term credentials from an IAM user and not temporary.
&lt;ul&gt;
&lt;li&gt;Find more details about configuring/getting your AWS credentials here:
&lt;a href=&#34;https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html&#34;&gt;https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;export S3_SECRET=&amp;lt;your s3 secret name&amp;gt;
aws secretsmanager create-secret --name S3_SECRET --secret-string &amp;#39;{&amp;#34;accesskey&amp;#34;:&amp;#34;AXXXXXXXXXXXXXXXXXX6&amp;#34;,&amp;#34;secretkey&amp;#34;:&amp;#34;eXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXq&amp;#34;}&amp;#39; --region $CLUSTER_REGION
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Rename the &lt;code&gt;parameters.objects.objectName&lt;/code&gt; field in &lt;a href=&#34;../../../awsconfigs/common/aws-secrets-manager/s3/secret-provider.yaml&#34;&gt;the s3 secret provider configuration&lt;/a&gt; to the name of the secret.
&lt;ul&gt;
&lt;li&gt;One line command:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;yq e -i &amp;#39;.spec.parameters.objects |= sub(&amp;#34;s3-secret&amp;#34;,env(S3_SECRET))&amp;#39; awsconfigs/common/aws-secrets-manager/s3/secret-provider.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;For example, if your secret name is &lt;code&gt;s3-secret-new&lt;/code&gt;, the configuration would look like:&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: s3-secret

  ...
             
  parameters:
    objects: | 
      - objectName: &amp;#34;s3-secret-new&amp;#34; # This line was changed
        objectType: &amp;#34;secretsmanager&amp;#34;
        jmesPath:
            - path: &amp;#34;accesskey&amp;#34;
              objectAlias: &amp;#34;access&amp;#34;
            - path: &amp;#34;secretkey&amp;#34;
              objectAlias: &amp;#34;secret&amp;#34;           
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install AWS Secrets &amp;amp; Configuration Provider with Kubernetes Secrets Store CSI driver&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run the following commands to enable oidc and create an iamserviceaccount with permissions to retrieve the secrets created from AWS Secrets Manager&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;eksctl utils associate-iam-oidc-provider --region=$CLUSTER_REGION --cluster=$CLUSTER_NAME --approve

eksctl create iamserviceaccount  --name kubeflow-secrets-manager-sa  --namespace kubeflow  --cluster $CLUSTER_NAME --attach-policy-arn  arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess --attach-policy-arn arn:aws:iam::aws:policy/SecretsManagerReadWrite --override-existing-serviceaccounts   --approve --region $CLUSTER_REGION
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Run these commands to install AWS Secrets &amp;amp; Configuration Provider with Kubernetes Secrets Store CSI driver&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.0.0/deploy/rbac-secretproviderclass.yaml
 kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.0.0/deploy/csidriver.yaml
 kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.0.0/deploy/secrets-store.csi.x-k8s.io_secretproviderclasses.yaml
 kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.0.0/deploy/secrets-store.csi.x-k8s.io_secretproviderclasspodstatuses.yaml
 kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.0.0/deploy/secrets-store-csi-driver.yaml
 kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.0.0/deploy/rbac-secretprovidersyncing.yaml

 kubectl apply -f https://raw.githubusercontent.com/aws/secrets-store-csi-driver-provider-aws/main/deployment/aws-provider-installer.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update the KFP configurations&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[RDS] Configure the &lt;a href=&#34;../../../awsconfigs/apps/pipeline/rds/params.env&#34;&gt;RDS params file&lt;/a&gt; with the RDS endpoint url and the metadata db name.&lt;/p&gt;
&lt;p&gt;For example, if your RDS endpoint URL is &lt;code&gt;rm12abc4krxxxxx.xxxxxxxxxxxx.us-west-2.rds.amazonaws.com&lt;/code&gt; and your metadata db name is &lt;code&gt;metadata_db&lt;/code&gt; your &lt;code&gt;params.env&lt;/code&gt; file should look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; dbHost=rm12abc4krxxxxx.xxxxxxxxxxxx.us-west-2.rds.amazonaws.com
 mlmdDb=metadata_db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[S3] Configure the &lt;a href=&#34;../../../awsconfigs/apps/pipeline/s3/params.env&#34;&gt;S3 params file&lt;/a&gt; with with the &lt;code&gt;S3 bucket name&lt;/code&gt;, and &lt;code&gt;S3 bucket region&lt;/code&gt;..&lt;/p&gt;
&lt;p&gt;For example, if your S3 bucket name is &lt;code&gt;kf-aws-demo-bucket&lt;/code&gt; and s3 bucket region is &lt;code&gt;us-west-2&lt;/code&gt; your &lt;code&gt;params.env&lt;/code&gt; file should look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; bucketName=kf-aws-demo-bucket
 minioServiceHost=s3.amazonaws.com
 minioServiceRegion=us-west-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;30-build-manifests-and-install-kubeflow&#34;&gt;3.0 Build Manifests and Install Kubeflow&lt;/h2&gt;
&lt;p&gt;Once you have the resources ready, you can continue on to deploying the Kubeflow manifests using the single line command below -&lt;/p&gt;
&lt;p&gt;Choose one of the deployment options from below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deploying the configuration for both RDS and S3&lt;/li&gt;
&lt;li&gt;Deploying the configuration for RDS only&lt;/li&gt;
&lt;li&gt;Deploying the configuration for S3 only&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;rds-and-s3-deploy-both-rds-and-s3&#34;&gt;[RDS and S3] Deploy both RDS and S3&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; ! kustomize build docs/deployment/rds-s3 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Retrying to apply resources&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; sleep 10&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;rds-deploy-rds-only&#34;&gt;[RDS] Deploy RDS only&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; ! kustomize build docs/deployment/rds-s3/rds-only &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Retrying to apply resources&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; sleep 10&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;s3-deploy-s3-only&#34;&gt;[S3] Deploy S3 only&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; ! kustomize build docs/deployment/rds-s3/s3-only &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Retrying to apply resources&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; sleep 10&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once, everything is installed successfully, you can access the Kubeflow Central Dashboard &lt;a href=&#34;../vanilla/README.md#connect-to-your-kubeflow-cluster&#34;&gt;by logging in to your cluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Congratulations! You can now start experimenting and running your end-to-end ML workflows with Kubeflow.&lt;/p&gt;
&lt;h2 id=&#34;40-verify-the-installation&#34;&gt;4.0 Verify the installation&lt;/h2&gt;
&lt;h3 id=&#34;41-verify-rds&#34;&gt;4.1 Verify RDS&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Connect to the RDS instance from a pod within the cluster&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;kubectl run -it --rm --image=mysql:5.7 --restart=Never mysql-client -- mysql -h &amp;lt;YOUR RDS ENDPOINT&amp;gt; -u &amp;lt;YOUR LOGIN&amp;gt; -p&amp;lt;YOUR PASSWORD&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that you can find your credentials by visiting &lt;a href=&#34;https://aws.amazon.com/secrets-manager/&#34;&gt;aws secrets manager&lt;/a&gt; or by using &lt;a href=&#34;https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/get-secret-value.html&#34;&gt;AWS CLI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For instance, to retrieve the value of a secret named &lt;code&gt;rds-secret&lt;/code&gt;, we would do :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;aws secretsmanager get-secret-value \
    --region $CLUSTER_REGION \
    --secret-id rds-secret \
    --query &amp;#39;SecretString&amp;#39; \
    --output text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Once connected verify the databases &lt;code&gt;kubeflow&lt;/code&gt; and &lt;code&gt;mlpipeline&lt;/code&gt; exist.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;mysql&amp;gt; show databases;

+--------------------+
| Database           |
+--------------------+
| information_schema |
| kubeflow           |
| mlpipeline         |
| mysql              |
| performance_schema |
+--------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Verify the database &lt;code&gt;mlpipeline&lt;/code&gt; has the following tables:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;mysql&amp;gt; use mlpipeline; show tables;

+----------------------+
| Tables_in_mlpipeline |
+----------------------+
| db_statuses          |
| default_experiments  |
| experiments          |
| jobs                 |
| pipeline_versions    |
| pipelines            |
| resource_references  |
| run_details          |
| run_metrics          |
+----------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;Access the Kubeflow Central Dashboard &lt;a href=&#34;../vanilla/README.md#connect-to-your-kubeflow-cluster&#34;&gt;by logging in to your cluster&lt;/a&gt; and navigate to Katib (under Experiments (AutoML)).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an experiment using the following &lt;a href=&#34;../../../tests/e2e/resources/custom-resource-templates/katib-experiment-random.yaml&#34;&gt;yaml file&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the experiment is complete verify the following table exists:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;mysql&amp;gt; use kubeflow; show tables;

+----------------------+
| Tables_in_kubeflow   |
+----------------------+
| observation_logs     |
+----------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Describe &lt;code&gt;observation_logs&lt;/code&gt; to verify it is being populated.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;mysql&amp;gt; select * from observation_logs;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;42-verify-s3&#34;&gt;4.2 Verify S3&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Access the Kubeflow Central Dashboard &lt;a href=&#34;../vanilla/README.md#connect-to-your-kubeflow-cluster&#34;&gt;by logging in to your cluster&lt;/a&gt; and navigate to Kubeflow Pipelines (under Pipelines).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an experiment named &lt;code&gt;test&lt;/code&gt; and create a run using the sample pipeline &lt;code&gt;[Demo] XGBoost - Iterative model training&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the run is completed go to the S3 AWS console and open the bucket you specified for the Kubeflow installation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verify the bucket is not empty and was populated by outputs of the experiment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;50-uninstall-kubeflow&#34;&gt;5.0 Uninstall Kubeflow&lt;/h2&gt;
&lt;p&gt;Run the following command to uninstall:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build docs/deployment/rds-s3 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl delete -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Additionally, the following cleanup steps may be required:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl delete mutatingwebhookconfigurations.admissionregistration.k8s.io webhook.eventing.knative.dev webhook.istio.networking.internal.knative.dev webhook.serving.knative.dev

kubectl delete validatingwebhookconfigurations.admissionregistration.k8s.io config.webhook.eventing.knative.dev config.webhook.istio.networking.internal.knative.dev config.webhook.serving.knative.dev

kubectl delete endpoints -n default mxnet-operator pytorch-operator tf-operator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To uninstall AWS resources created by the automated setup run the cleanup script&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Navigate to the Navigate to &lt;code&gt;tests/e2e&lt;/code&gt; directory&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd tests/e2e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Install the script dependencies &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make sure you have the configuration file created by the script in &lt;code&gt;tests/e2e/utils/rds-s3/metadata.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Export values for &lt;code&gt;CLUSTER_REGION&lt;/code&gt; then run the script&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;EXPORT CLUSTER_REGION=
PYTHONPATH=.. python utils/rds-s3/auto-rds-s3-cleanup.py --region $CLUSTER_REGION 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Cognito, RDS, and S3</title>
      <link>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/cognito-rds-s3/guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/cognito-rds-s3/guide/</guid>
      <description>
        
        
        &lt;p&gt;This guide describes how to deploy Kubeflow on AWS EKS using Cognito as identity provider, RDS for database and S3 for artifact storage.&lt;/p&gt;
&lt;h2 id=&#34;1-prerequisites&#34;&gt;1. Prerequisites&lt;/h2&gt;
&lt;p&gt;Follow the pre-requisites section from &lt;a href=&#34;../prerequisites.md&#34;&gt;this guide&lt;/a&gt; and setup RDS &amp;amp; S3 from &lt;a href=&#34;../rds-s3/README.md#20-setup-rds-s3-and-configure-secrets&#34;&gt;this guide&lt;/a&gt; to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the CLI tools&lt;/li&gt;
&lt;li&gt;Clone the repo&lt;/li&gt;
&lt;li&gt;Create an EKS cluster and&lt;/li&gt;
&lt;li&gt;Create S3 Bucket&lt;/li&gt;
&lt;li&gt;Create RDS Instance&lt;/li&gt;
&lt;li&gt;Configure AWS Secrets for RDS and S3&lt;/li&gt;
&lt;li&gt;Install AWS Secrets and Kubernetes Secrets Store CSI driver&lt;/li&gt;
&lt;li&gt;Configure RDS endpoint and S3 bucket name for Kubeflow Pipelines&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;configure-custom-domain-and-cognito&#34;&gt;Configure Custom Domain and Cognito&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Follow the &lt;a href=&#34;../cognito/README.md&#34;&gt;cognito guide&lt;/a&gt; from &lt;a href=&#34;../cognito/README.md#10-custom-domain-and-certificates&#34;&gt;section 1.0(Custom Domain)&lt;/a&gt; upto &lt;a href=&#34;../cognito/README.md#30-configure-ingress&#34;&gt;section 3.0(Configure Ingress)&lt;/a&gt; to:
&lt;ol&gt;
&lt;li&gt;Create a custom domain&lt;/li&gt;
&lt;li&gt;Create TLS certificates for the domain&lt;/li&gt;
&lt;li&gt;Create a Cognito Userpool&lt;/li&gt;
&lt;li&gt;Configure Ingress&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Deploy Kubeflow. Choose one of the two options to deploy kubeflow:
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;[Option 1]&lt;/strong&gt; Install with a single command
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;while ! kustomize build docs/deployment/cognito-rds-s3 | kubectl apply -f -; do echo &amp;#34;Retrying to apply resources&amp;#34;; sleep 10; done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[Option 2]&lt;/strong&gt; Install individual components
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;# Kubeflow namespace
kustomize build upstream/common/kubeflow-namespace/base | kubectl apply -f -
       
# Kubeflow Roles
kustomize build upstream/common/kubeflow-roles/base | kubectl apply -f -
       
# Istio
kustomize build upstream/common/istio-1-9/istio-crds/base | kubectl apply -f -
kustomize build upstream/common/istio-1-9/istio-namespace/base | kubectl apply -f -
kustomize build upstream/common/istio-1-9/istio-install/base | kubectl apply -f -

# Cert-Manager
kustomize build upstream/common/cert-manager/cert-manager/base | kubectl apply -f -
kustomize build upstream/common/cert-manager/kubeflow-issuer/base | kubectl apply -f -
       
# KNative
kustomize build upstream/common/knative/knative-serving/overlays/gateways | kubectl apply -f -
kustomize build upstream/common/knative/knative-eventing/base | kubectl apply -f -
kustomize build upstream/common/istio-1-9/cluster-local-gateway/base | kubectl apply -f -
       
# Kubeflow Istio Resources
kustomize build upstream/common/istio-1-9/kubeflow-istio-resources/base | kubectl apply -f -
       
# KFServing
kustomize build upstream/apps/kfserving/upstream/overlays/kubeflow | kubectl apply -f -
       
# Central Dashboard
kustomize build upstream/apps/centraldashboard/upstream/overlays/istio | kubectl apply -f -
       
# Notebooks
kustomize build upstream/apps/jupyter/notebook-controller/upstream/overlays/kubeflow | kubectl apply -f -
kustomize build awsconfigs/apps/jupyter-web-app | kubectl apply -f -
       
# Admission Webhook
kustomize build upstream/apps/admission-webhook/upstream/overlays/cert-manager | kubectl apply -f -
       
# Profiles + KFAM
kustomize build upstream/apps/profiles/upstream/overlays/kubeflow | kubectl apply -f -
       
# Volumes Web App
kustomize build upstream/apps/volumes-web-app/upstream/overlays/istio | kubectl apply -f -
       
# Tensorboard
kustomize build upstream/apps/tensorboard/tensorboards-web-app/upstream/overlays/istio | kubectl apply -f -
kustomize build upstream/apps/tensorboard/tensorboard-controller/upstream/overlays/kubeflow | kubectl apply -f -
       
# MPI Operator
kustomize build upstream/apps/mpi-job/upstream/overlays/kubeflow | kubectl apply -f -

# Training Operator
kustomize build upstream/apps/training-operator/upstream/overlays/kubeflow | kubectl apply -f -

# AWS Telemetry - This is an optional component. See usage tracking documentation for more information
kustomize build awsconfigs/common/aws-telemetry | kubectl apply -f -

# AWS Secret Manager
kustomize build awsconfigs/common/aws-secrets-manager | kubectl apply -f -

# Kubeflow Pipelines
kustomize build awsconfigs/apps/pipeline | kubectl apply -f -

# Katib
kustomize build awsconfigs/apps/katib-external-db-with-kubeflow | kubectl apply -f -

# Configured for AWS Cognito
       
# Ingress
kustomize build awsconfigs/common/istio-ingress/overlays/cognito | kubectl apply -f -

# ALB controller
kustomize build awsconfigs/common/aws-alb-ingress-controller/base | kubectl apply -f -

# Authservice
kustomize build awsconfigs/common/aws-authservice/base | kubectl apply -f -        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Follow the rest of the cognito guide from &lt;a href=&#34;../cognito/README.md#50-updating-the-domain-with-ALB-address&#34;&gt;section 5.0(Updating the domain with ALB address)&lt;/a&gt; to:
&lt;ol&gt;
&lt;li&gt;Add/Update the DNS records in custom domain with the ALB address&lt;/li&gt;
&lt;li&gt;Create a user in Cognito user pool&lt;/li&gt;
&lt;li&gt;Create a profile for the user from the user pool&lt;/li&gt;
&lt;li&gt;Connect to the central dashboard&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Vanilla Installation</title>
      <link>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/vanilla/guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/vanilla/guide/</guid>
      <description>
        
        
        &lt;h1 id=&#34;deploying-kubeflow-on-eks&#34;&gt;Deploying Kubeflow on EKS&lt;/h1&gt;
&lt;p&gt;This guide describes how to deploy Kubeflow on AWS EKS&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;This guide assumes that you have:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Installed the following tools on the client machine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html&#34;&gt;AWS CLI&lt;/a&gt; - A command line tool for interacting with AWS services.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eksctl.io/introduction/#installation&#34;&gt;eksctl&lt;/a&gt; - A command line tool for working with EKS clusters.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools&#34;&gt;kubectl&lt;/a&gt; - A command line tool for working with Kubernetes clusters.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mikefarah.gitbook.io/yq&#34;&gt;yq&lt;/a&gt; - A command line tool for YAML processing. (For Linux environments, use the &lt;a href=&#34;https://mikefarah.gitbook.io/yq/#wget&#34;&gt;wget plain binary installation&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stedolan.github.io/jq/download/&#34;&gt;jq&lt;/a&gt; - A command line tool for processing JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/kustomize/releases/tag/v3.2.0&#34;&gt;kustomize version 3.2.0&lt;/a&gt; - A command line tool to customize Kubernetes objects through a kustomization file.
&lt;ul&gt;
&lt;li&gt;:warning: Kubeflow is not compatible with the latest versions of of kustomize 4.x. This is due to changes in the order resources are sorted and printed. Please see &lt;a href=&#34;https://github.com/kubernetes-sigs/kustomize/issues/3794&#34;&gt;kubernetes-sigs/kustomize#3794&lt;/a&gt; and &lt;a href=&#34;https://github.com/kubeflow/manifests/issues/1797&#34;&gt;kubeflow/manifests#1797&lt;/a&gt;. We know this is not ideal and are working with the upstream kustomize team to add support for the latest versions of kustomize as soon as we can.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Created an EKS cluster&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you do not have an existing cluster, run the following command to create an EKS cluster. More details about cluster creation via &lt;code&gt;eksctl&lt;/code&gt; can be found &lt;a href=&#34;https://eksctl.io/usage/creating-and-managing-clusters/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Substitute values for the CLUSTER_NAME and CLUSTER_REGION in the script below
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;export CLUSTER_NAME=$CLUSTER_NAME
export CLUSTER_REGION=$CLUSTER_REGION
eksctl create cluster \
--name ${CLUSTER_NAME} \
--version 1.19 \
--region ${CLUSTER_REGION} \
--nodegroup-name linux-nodes \
--node-type m5.xlarge \
--nodes 5 \
--nodes-min 1 \
--nodes-max 10 \
--managed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone the &lt;code&gt;awslabs/kubeflow-manifest&lt;/code&gt; repo, &lt;code&gt;kubeflow/manifests&lt;/code&gt; repo and checkout the release branches.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Substitute the value for &lt;code&gt;KUBEFLOW_RELEASE_VERSION&lt;/code&gt;(e.g. v1.4.1) and &lt;code&gt;AWS_RELEASE_VERSION&lt;/code&gt;(e.g. v1.4.1-aws-b1.0.0) with the tag or branch you want to use below. Read more about &lt;a href=&#34;../../community/releases.md#releases-and-versioning&#34;&gt;releases and versioning&lt;/a&gt; policy if you are unsure about what these values should be.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;export KUBEFLOW_RELEASE_VERSION=&amp;lt;&amp;gt;
export AWS_RELEASE_VERSION=&amp;lt;&amp;gt;
git clone https://github.com/awslabs/kubeflow-manifests.git &amp;amp;&amp;amp; cd kubeflow-manifests
git checkout ${AWS_RELEASE_VERSION}
git clone --branch ${KUBEFLOW_RELEASE_VERSION} https://github.com/kubeflow/manifests.git upstream
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;build-manifests-and-install-kubeflow&#34;&gt;Build Manifests and Install Kubeflow&lt;/h3&gt;
&lt;p&gt;There two options for installing Kubeflow official components and common services with kustomize.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Single-command installation of all components under &lt;code&gt;apps&lt;/code&gt; and &lt;code&gt;common&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Multi-command, individual components installation for &lt;code&gt;apps&lt;/code&gt; and &lt;code&gt;common&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Option 1 targets ease of deployment for end users.&lt;br&gt;
Option 2 targets customization and ability to pick and choose individual components.&lt;/p&gt;
&lt;p&gt;:warning: In both options, we use a default email (&lt;code&gt;user@example.com&lt;/code&gt;) and password (&lt;code&gt;12341234&lt;/code&gt;). For any production Kubeflow deployment, you should change the default password by following &lt;a href=&#34;#change-default-user-password&#34;&gt;the relevant section&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kubectl apply&lt;/code&gt; commands may fail on the first try. This is inherent in how Kubernetes and &lt;code&gt;kubectl&lt;/code&gt; work (e.g., CR must be created after CRD becomes ready). The solution is to simply re-run the command until it succeeds. For the single-line command, we have included a bash one-liner to retry the command.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;install-with-a-single-command&#34;&gt;Install with a single command&lt;/h3&gt;
&lt;p&gt;You can install all Kubeflow official components (residing under &lt;code&gt;apps&lt;/code&gt;) and all common services (residing under &lt;code&gt;common&lt;/code&gt;) using the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; ! kustomize build docs/deployment/vanilla &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Retrying to apply resources&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; sleep 10&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once, everything is installed successfully, you can access the Kubeflow Central Dashboard &lt;a href=&#34;#connect-to-your-kubeflow-cluster&#34;&gt;by logging in to your cluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Congratulations! You can now start experimenting and running your end-to-end ML workflows with Kubeflow.&lt;/p&gt;
&lt;h3 id=&#34;install-individual-components&#34;&gt;Install individual components&lt;/h3&gt;
&lt;p&gt;In this section, we will install each Kubeflow official component (under &lt;code&gt;apps&lt;/code&gt;) and each common service (under &lt;code&gt;common&lt;/code&gt;) separately, using just &lt;code&gt;kubectl&lt;/code&gt; and &lt;code&gt;kustomize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If all the following commands are executed, the result is the same as in the above section of the single command installation. The purpose of this section is to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide a description of each component and insight on how it gets installed.&lt;/li&gt;
&lt;li&gt;Enable the user or distribution owner to pick and choose only the components they need.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cert-manager&#34;&gt;cert-manager&lt;/h4&gt;
&lt;p&gt;cert-manager is used by many Kubeflow components to provide certificates for
admission webhooks.&lt;/p&gt;
&lt;p&gt;Install cert-manager:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/cert-manager/cert-manager/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
kustomize build common/cert-manager/kubeflow-issuer/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;istio&#34;&gt;Istio&lt;/h4&gt;
&lt;p&gt;Istio is used by many Kubeflow components to secure their traffic, enforce
network authorization and implement routing policies.&lt;/p&gt;
&lt;p&gt;Install Istio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/istio-1-9/istio-crds/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
kustomize build common/istio-1-9/istio-namespace/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
kustomize build common/istio-1-9/istio-install/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;dex&#34;&gt;Dex&lt;/h4&gt;
&lt;p&gt;Dex is an OpenID Connect Identity (OIDC) with multiple authentication backends. In this default installation, it includes a static user with email &lt;code&gt;user@example.com&lt;/code&gt;. By default, the user&amp;rsquo;s password is &lt;code&gt;12341234&lt;/code&gt;. For any production Kubeflow deployment, you should change the default password by following &lt;a href=&#34;#change-default-user-password&#34;&gt;the relevant section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Install Dex:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/dex/overlays/istio &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;oidc-authservice&#34;&gt;OIDC AuthService&lt;/h4&gt;
&lt;p&gt;The OIDC AuthService extends your Istio Ingress-Gateway capabilities, to be able to function as an OIDC client:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/oidc-authservice/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;knative&#34;&gt;Knative&lt;/h4&gt;
&lt;p&gt;Knative is used by the KFServing official Kubeflow component.&lt;/p&gt;
&lt;p&gt;Install Knative Serving:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/knative/knative-serving/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
kustomize build common/istio-1-9/cluster-local-gateway/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Optionally, you can install Knative Eventing which can be used for inference request logging:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/knative/knative-eventing/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kubeflow-namespace&#34;&gt;Kubeflow Namespace&lt;/h4&gt;
&lt;p&gt;Create the namespace where the Kubeflow components will live in. This namespace
is named &lt;code&gt;kubeflow&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Install kubeflow namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/kubeflow-namespace/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kubeflow-roles&#34;&gt;Kubeflow Roles&lt;/h4&gt;
&lt;p&gt;Create the Kubeflow ClusterRoles, &lt;code&gt;kubeflow-view&lt;/code&gt;, &lt;code&gt;kubeflow-edit&lt;/code&gt; and
&lt;code&gt;kubeflow-admin&lt;/code&gt;. Kubeflow components aggregate permissions to these
ClusterRoles.&lt;/p&gt;
&lt;p&gt;Install kubeflow roles:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/kubeflow-roles/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kubeflow-istio-resources&#34;&gt;Kubeflow Istio Resources&lt;/h4&gt;
&lt;p&gt;Create the Istio resources needed by Kubeflow. This kustomization currently
creates an Istio Gateway named &lt;code&gt;kubeflow-gateway&lt;/code&gt;, in namespace &lt;code&gt;kubeflow&lt;/code&gt;.
If you want to install with your own Istio, then you need this kustomization as
well.&lt;/p&gt;
&lt;p&gt;Install istio resources:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/istio-1-9/kubeflow-istio-resources/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kubeflow-pipelines&#34;&gt;Kubeflow Pipelines&lt;/h4&gt;
&lt;p&gt;Install the &lt;a href=&#34;https://www.kubeflow.org/docs/components/pipelines/multi-user/&#34;&gt;Multi-User Kubeflow Pipelines&lt;/a&gt; official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/pipeline/upstream/env/platform-agnostic-multi-user &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kfserving&#34;&gt;KFServing&lt;/h4&gt;
&lt;p&gt;Install the KFServing official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/kfserving/upstream/overlays/kubeflow &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;katib&#34;&gt;Katib&lt;/h4&gt;
&lt;p&gt;Install the Katib official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/katib/upstream/installs/katib-with-kubeflow &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;central-dashboard&#34;&gt;Central Dashboard&lt;/h4&gt;
&lt;p&gt;Install the Central Dashboard official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/centraldashboard/upstream/overlays/istio &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;admission-webhook&#34;&gt;Admission Webhook&lt;/h4&gt;
&lt;p&gt;Install the Admission Webhook for PodDefaults:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/admission-webhook/upstream/overlays/cert-manager &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;notebooks&#34;&gt;Notebooks&lt;/h4&gt;
&lt;p&gt;Install the Notebook Controller official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/jupyter/notebook-controller/upstream/overlays/kubeflow &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install the Jupyter Web App official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/jupyter/jupyter-web-app/upstream/overlays/istio &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;profiles--kfam&#34;&gt;Profiles + KFAM&lt;/h4&gt;
&lt;p&gt;Install the Profile Controller and the Kubeflow Access-Management (KFAM) official Kubeflow
components:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/profiles/upstream/overlays/kubeflow &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;volumes-web-app&#34;&gt;Volumes Web App&lt;/h4&gt;
&lt;p&gt;Install the Volumes Web App official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/volumes-web-app/upstream/overlays/istio &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;tensorboard&#34;&gt;Tensorboard&lt;/h4&gt;
&lt;p&gt;Install the Tensorboards Web App official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/tensorboard/tensorboards-web-app/upstream/overlays/istio &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install the Tensorboard Controller official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/tensorboard/tensorboard-controller/upstream/overlays/kubeflow &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;training-operator&#34;&gt;Training Operator&lt;/h4&gt;
&lt;p&gt;Install the Training Operator official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/training-operator/upstream/overlays/kubeflow &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;mpi-operator&#34;&gt;MPI Operator&lt;/h4&gt;
&lt;p&gt;Install the MPI Operator official Kubeflow component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build apps/mpi-job/upstream/overlays/kubeflow &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;aws-telemetry&#34;&gt;AWS Telemetry&lt;/h4&gt;
&lt;p&gt;Install the AWS Kubeflow telemetry component. This is an optional component. See the &lt;a href=&#34;../README.md#usage-tracking&#34;&gt;usage tracking documentation&lt;/a&gt; for more information&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build awsconfigs/common/aws-telemetry &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;user-namespace&#34;&gt;User Namespace&lt;/h4&gt;
&lt;p&gt;Finally, create a new namespace for the the default user (named &lt;code&gt;kubeflow-user-example-com&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kustomize build common/user-namespace/base &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;connect-to-your-kubeflow-cluster&#34;&gt;Connect to your Kubeflow Cluster&lt;/h3&gt;
&lt;p&gt;After installation, it will take some time for all Pods to become ready. Make sure all Pods are ready before trying to connect, otherwise you might get unexpected errors. To check that all Kubeflow-related Pods are ready, use the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl get pods -n cert-manager
kubectl get pods -n istio-system
kubectl get pods -n auth
kubectl get pods -n knative-eventing
kubectl get pods -n knative-serving
kubectl get pods -n kubeflow
kubectl get pods -n kubeflow-user-example-com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;port-forward&#34;&gt;Port-Forward&lt;/h4&gt;
&lt;p&gt;To get started quickly you can access Kubeflow via port-forward. Run the following to port-forward Istio&amp;rsquo;s Ingress-Gateway to local port &lt;code&gt;8080&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl port-forward svc/istio-ingressgateway -n istio-system 8080:80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After running the command, you can access the Kubeflow Central Dashboard by doing the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open your browser and visit &lt;code&gt;http://localhost:8080&lt;/code&gt;. You should get the Dex login screen.&lt;/li&gt;
&lt;li&gt;Login with the default user&amp;rsquo;s credential. The default email address is &lt;code&gt;user@example.com&lt;/code&gt; and the default password is &lt;code&gt;12341234&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;exposing-kubeflow-over-load-balancer&#34;&gt;Exposing Kubeflow over Load Balancer&lt;/h4&gt;
&lt;p&gt;In order to expose Kubeflow over an external address you can setup AWS Application Load Balancer. Please take a look at the &lt;a href=&#34;../add-ons/load-balancer/README.md&#34;&gt;load-balancer&lt;/a&gt; guide to set it up.&lt;/p&gt;
&lt;h3 id=&#34;change-default-user-password&#34;&gt;Change default user password&lt;/h3&gt;
&lt;p&gt;For security reasons, we don&amp;rsquo;t want to use the default password for the default Kubeflow user when installing in security-sensitive environments. Instead, you should define your own password before deploying. To define a password for the default user:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Pick a password for the default user, with email &lt;code&gt;user@example.com&lt;/code&gt;, and hash it using &lt;code&gt;bcrypt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;python3 -c &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;from passlib.hash import bcrypt; import getpass; print(bcrypt.using(rounds=12, ident=&amp;#34;2y&amp;#34;).hash(getpass.getpass()))&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;upstream/common/dex/base/config-map.yaml&lt;/code&gt; and fill the relevant field with the hash of the password you chose:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;staticPasswords&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;email&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user@example.com&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hash&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;lt;enter the generated hash here&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Add-ons</title>
      <link>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/add-ons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/add-ons/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/cognito/readme-automated/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rrrkharse.github.io/kubeflow-manifests-docsy-submodule/docs/deployment/install/cognito/readme-automated/</guid>
      <description>
        
        
        &lt;h1 id=&#34;deploying-kubeflow-with-aws-cognito-as-idp&#34;&gt;Deploying Kubeflow with AWS Cognito as idP&lt;/h1&gt;
&lt;p&gt;This guide describes how to deploy Kubeflow on AWS EKS using Cognito as identity provider. Kubeflow uses Istio to manage internal traffic. In this guide we will be creating an Ingress to manage external traffic to the Kubernetes services and an Application Load Balancer(ALB) to provide public DNS and enable TLS authentication at the load balancer. We will also be creating a custom domain to host Kubeflow since certificates(needed for TLS) for ALB&amp;rsquo;s public DNS names are not supported.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;This guide assumes you have python3.8 installed and completed the pre-requisites from this &lt;a href=&#34;./README.md#prerequisites&#34;&gt;README&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-required-resources-and-deploy-kubeflow&#34;&gt;Create required resources and deploy Kubeflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The following steps automate &lt;a href=&#34;./README.md#10-custom-domain-and-certificates&#34;&gt;section 1.0(Custom domain and certificates)&lt;/a&gt; (creating a custom domain to host Kubeflow and TLS certificates for the domain), &lt;a href=&#34;./README.md#20-cognito-user-pool&#34;&gt;section 2.0(Cognito user pool)&lt;/a&gt; (creating a Cognito Userpool used for user authentication) and&lt;a href=&#34;./README.md#30-configure-ingress&#34;&gt;section 3.0(Configure Ingress)&lt;/a&gt; (configuring ingress and load balancer controller manifests) of the cognito guide.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install dependencies for the scripts
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;pip install -r tests/e2e/requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Substitute values in &lt;code&gt;tests/e2e/utils/cognito_bootstrap/config.yaml&lt;/code&gt;.
&lt;ol&gt;
&lt;li&gt;Registed root domain in &lt;code&gt;route53.rootDomain.name&lt;/code&gt;. Lets assume this domain is &lt;code&gt;example.com&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;If your domain is managed in route53, enter the Hosted zone ID found under Hosted zone details in &lt;code&gt;route53.rootDomain.hostedZoneId&lt;/code&gt;. Skip this step if your domain is managed by other domain provider.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Name of the sudomain you want to host Kubeflow (e.g. &lt;code&gt;platform.example.com&lt;/code&gt;) in &lt;code&gt;route53.subDomain.name&lt;/code&gt;. Please read &lt;a href=&#34;../add-ons/load-balancer/README.md#create-domain-and-certificates&#34;&gt;this section&lt;/a&gt; to understand why we use a subdomain.&lt;/li&gt;
&lt;li&gt;Cluster name and region where kubeflow will be deployed in &lt;code&gt;cluster.name&lt;/code&gt; and &lt;code&gt;cluster.region&lt;/code&gt; (e.g. us-west-2) respectively.&lt;/li&gt;
&lt;li&gt;Name of cognito userpool in &lt;code&gt;cognitoUserpool.name&lt;/code&gt; e.g. kubeflow-users.&lt;/li&gt;
&lt;li&gt;The config file will look something like:
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; cognitoUserpool:
     name: kubeflow-users
 cluster:
     name: kube-eks-cluster
     region: us-west-2
 route53:
     rootDomain:
         hostedZoneId: XXXX
         name: example.com
     subDomain:
         name: platform.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Run the script to create the resources
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; cd tests/e2e
 PYTHONPATH=.. python utils/cognito_bootstrap/cognito_pre_deployment.py
 cd -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;The script will update the config file with the resource names/ids/ARNs it created. It will look something like:
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; cognitoUserpool:
     ARN: arn:aws:cognito-idp:us-west-2:123456789012:userpool/us-west-2_yasI9dbxF
     appClientId: 5jmk7ljl2a74jk3n0a0fvj3l31
     domainAliasTarget: xxxxxxxxxx.cloudfront.net
     domain: auth.platform.example.com
     name: kubeflow-users
 kubeflow:
     alb:
         serviceAccount:
             name: alb-ingress-controller
             namespace: kubeflow
             policyArn: arn:aws:iam::123456789012:policy/alb_ingress_controller_kube-eks-clusterxxx
 cluster:
     name: kube-eks-cluster
     region: us-west-2
 route53:
     rootDomain:
         certARN: arn:aws:acm:us-east-1:123456789012:certificate/9d8c4bbc-3b02-4a48-8c7d-d91441c6e5af
         hostedZoneId: XXXXX
         name: example.com
     subDomain:
         us-west-2-certARN: arn:aws:acm:us-west-2:123456789012:certificate/d1d7b641c238-4bc7-f525-b7bf-373cc726
         hostedZoneId: XXXXX
         name: platform.example.com
         us-east-1-certARN: arn:aws:acm:us-east-1:123456789012:certificate/373cc726-f525-4bc7-b7bf-d1d7b641c238
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow the &lt;a href=&#34;./README.md#40-building-manifests-and-deploying-kubeflow&#34;&gt;section 4.0(Building manifests and deploying Kubeflow)&lt;/a&gt; to install Kubeflow&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updating the domain with ALB address&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Check if ALB is provisioned. It takes around 3-5 minutes
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; kubectl get ingress -n istio-system
 Warning: extensions/v1beta1 Ingress is deprecated in v1.14+, unavailable in v1.22+; use networking.k8s.io/v1 Ingress
 NAME            CLASS    HOSTS   ADDRESS                                                                  PORTS   AGE
 istio-ingress   &amp;lt;none&amp;gt;   *       ebde55ee-istiosystem-istio-2af2-1100502020.us-west-2.elb.amazonaws.com   80      15d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;ADDRESS&lt;/code&gt; is empty after a few minutes, check the logs of alb-ingress-controller by following &lt;a href=&#34;https://www.kubeflow.org/docs/distributions/aws/troubleshooting-aws/#alb-fails-to-provision&#34;&gt;this guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Substitute the ALB address under &lt;code&gt;kubeflow.alb.dns&lt;/code&gt; in &lt;code&gt;tests/e2e/utils/cognito_bootstrap/config.yaml&lt;/code&gt;. The kubeflow section of the config file will look like:
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; kubeflow:
     alb:
         dns: ebde55ee-istiosystem-istio-2af2-1100502020.us-west-2.elb.amazonaws.com
         serviceAccount:
             name: alb-ingress-controller
             policyArn: arn:aws:iam::123456789012:policy/alb_ingress_controller_kube-eks-clusterxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Run the following script to update the subdomain with ALB address
&lt;ol&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; cd tests/e2e
 PYTHONPATH=.. python utils/cognito_bootstrap/cognito_post_deployment.py
 cd -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow the rest of the cognito guide from &lt;a href=&#34;./README.md#60-connecting-to-central-dashboard&#34;&gt;section 6.0(Connecting to central dashboard)&lt;/a&gt; to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a user in Cognito user pool&lt;/li&gt;
&lt;li&gt;Create a profile for the user from the user pool&lt;/li&gt;
&lt;li&gt;Connect to the central dashboard&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
